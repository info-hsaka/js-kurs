"use strict";(self.webpackChunkjs_kurs=self.webpackChunkjs_kurs||[]).push([[581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Intro","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Willkommen","href":"/docs/intro/welcome","docId":"intro/welcome","unlisted":false},{"type":"link","label":"Ziele","href":"/docs/intro/goals","docId":"intro/goals","unlisted":false},{"type":"link","label":"Setup","href":"/docs/intro/setup","docId":"intro/setup","unlisted":false},{"type":"link","label":"How to Code","href":"/docs/intro/howto","docId":"intro/howto","unlisted":false}]},{"type":"category","label":"Kapitel 1","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Variablen","href":"/docs/part-one/variables","docId":"part-one/variables","unlisted":false},{"type":"link","label":"Types","href":"/docs/part-one/types","docId":"part-one/types","unlisted":false},{"type":"link","label":"Operators","href":"/docs/part-one/operands","docId":"part-one/operands","unlisted":false}]},{"type":"category","label":"Kapitel 2","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Comments","href":"/docs/part-two/comments","docId":"part-two/comments","unlisted":false},{"type":"link","label":"Conditionals","href":"/docs/part-two/conditionals","docId":"part-two/conditionals","unlisted":false},{"type":"link","label":"Loops","href":"/docs/part-two/loops","docId":"part-two/loops","unlisted":false},{"type":"link","label":"Scopes","href":"/docs/part-two/scopes","docId":"part-two/scopes","unlisted":false},{"type":"link","label":"Functions","href":"/docs/part-two/functions","docId":"part-two/functions","unlisted":false}]},{"type":"category","label":"Kapitel 3","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Advanced Strings & Builtins","href":"/docs/part-three/builtins","docId":"part-three/builtins","unlisted":false},{"type":"link","label":"Arrays","href":"/docs/part-three/arrays","docId":"part-three/arrays","unlisted":false},{"type":"link","label":"Objects","href":"/docs/part-three/objects","docId":"part-three/objects","unlisted":false}]}]},"docs":{"intro/goals":{"id":"intro/goals","title":"Ziele","description":"Das Ziel dieses Tutorials ist es, euch die Grundlagen des Programmierens anhand der Programmiersprache Javascript zu vermitteln. Allerdings sind praktisch alle vermittelten Konzepte auf praktisch jede andere Programmiersprache \xfcbertragbar. Wir behandeln bewusst nur einen ausgew\xe4hlten Teil der Sprache - falls ihr schon mal programmiert habt wird euch auffallen, dass wir gewisse Konstrukte auslassen. Dennoch reichen alle beschriebenen Konstrukte aus, um alle im Kurs relevanten Probleme (und auch die meisten dar\xfcber hinaus) zu l\xf6sen.","sidebar":"tutorialSidebar"},"intro/howto":{"id":"intro/howto","title":"How to Code","description":"Wir geben in diesem Tutorial immer wieder Codebeispiele, welche zum Beispiel so aussehen k\xf6nnen:","sidebar":"tutorialSidebar"},"intro/setup":{"id":"intro/setup","title":"Setup","description":"Um mit dem Tutorial und damit auch mit dem Programmieren loszulegen, brauchst du zun\xe4chst ein paar Programme und Accounts. Diese setzen wir jezt zusammen auf. Das Setup welches wir hier zusammen einrichten wird genau so auch auf der Akademie selbst benutzt werden - es lohnt sich also, sich jetzt schon daran zu gew\xf6hnen.","sidebar":"tutorialSidebar"},"intro/welcome":{"id":"intro/welcome","title":"Willkommen","description":"Dieser Kurs zielt darauf ab euch einen kurzen \xfcberblick \xfcber Programmieren allgemein und JavaScript als Programmiersprache im Speziellen zu geben.","sidebar":"tutorialSidebar"},"part-one/operands":{"id":"part-one/operands","title":"Operators","description":"Euch ist vielleicht aufgefallen, dass wir bisher nicht wirklich Daten verarbeitet haben. Wir haben nur feste Daten in unser Programm geschrieben und diese ausgegeben. Das \xe4ndern wir jetzt.","sidebar":"tutorialSidebar"},"part-one/types":{"id":"part-one/types","title":"Types","description":"Wir haben im letzten Abschnitt h\xe4ufig das Wort \\"Wert\\" f\xfcr den Inhalt einer Variable verwendet. Aber was kann so ein Wert denn sein?","sidebar":"tutorialSidebar"},"part-one/variables":{"id":"part-one/variables","title":"Variablen","description":"Beim Programmieren sind Variablen eins der wichtigsten Kernelemente.","sidebar":"tutorialSidebar"},"part-three/arrays":{"id":"part-three/arrays","title":"Arrays","description":"Biser haben wir nur mit Werten von so genannten primitiven Datentypen (Strings, Numbers, Booleans) gearbeitet. Es gibt noch eine weitere Art Datentypen: composite Typen.","sidebar":"tutorialSidebar"},"part-three/builtins":{"id":"part-three/builtins","title":"Advanced Strings & Builtins","description":"Template Strings","sidebar":"tutorialSidebar"},"part-three/objects":{"id":"part-three/objects","title":"Objects","description":"Der letzte composite Datentyp den wir uns anschauen sind Objekte / Objects.","sidebar":"tutorialSidebar"},"part-two/comments":{"id":"part-two/comments","title":"Comments","description":"Langsam wird der Code den wir schreiben komplexer. Um auch l\xe4ngeren und komplizierteren Code lesbar und verst\xe4ndlich zu machen, gibt es sogenannte Comments (Kommentare). Ein Kommentar ist eine Codezeile, welche nichts tut - sie wird vom Computer ignoriert und dient nur dazu, Menschen das Lesen von Code zu vereinfachen.","sidebar":"tutorialSidebar"},"part-two/conditionals":{"id":"part-two/conditionals","title":"Conditionals","description":"Ein Kernelement von allen Programmen, welches wir bisher noch nicht abgedeckt haben, sind Fallunterscheidungen.","sidebar":"tutorialSidebar"},"part-two/functions":{"id":"part-two/functions","title":"Functions","description":"Nach Scopes lernen wir nun das wahrscheinlich wichtigste Konstrukt in der Programmierung kennen: Functions (Funktionen). Funktionen sind der Mechanismus der es \xfcberhaupt erlaubt, gro\xdfe Softwareprojekte zu schreiben und dabei die \xdcbersicht zu behalten.","sidebar":"tutorialSidebar"},"part-two/loops":{"id":"part-two/loops","title":"Loops","description":"Bisher sind unsere Programme geradlinig von oben nach unten durchgelaufen. Manchmal m\xf6chte man in einem Programm aber den selben Code h\xe4ufig hintereinander ausf\xfchren. Daf\xfcr gibt es sogenannte Loops (Schleifen).","sidebar":"tutorialSidebar"},"part-two/scopes":{"id":"part-two/scopes","title":"Scopes","description":"In der Programmierung gibt es an sich nicht besonders viele verschiedene Konstrukte - mit Variablen, Conditionals, Operatoren und Loops haben wir bereits einen Gro\xdfteil kennengelernt. Trotzdem lassen sich mit so wenigen Konstrukten beliebig komplexe Probleme l\xf6sen. Es gibt mehrere Mechanismen, die das erm\xf6glichen. Einer davon sind Scopes.","sidebar":"tutorialSidebar"}}}')}}]);